<?php

/******BEGIN LICENSE BLOCK*******
* 
* Common Public Attribution License Version 1.0.
*
* The contents of this file are subject to the Common Public Attribution 
* License Version 1.0 (the "License") you may not use this file except in 
* compliance with the License. You may obtain a copy of the License at
* http://developers.facebook.com/fbopen/cpal.html. The License is based 
* on the Mozilla Public License Version 1.1 but Sections 14 and 15 have 
* been added to cover use of software over a computer network and provide 
* for limited attribution for the Original Developer. In addition, Exhibit A 
* has been modified to be consistent with Exhibit B.
* Software distributed under the License is distributed on an "AS IS" basis, 
* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License 
* for the specific language governing rights and limitations under the License.
* The Original Code is Facebook Open Platform.
* The Original Developer is the Initial Developer.
* The Initial Developer of the Original Code is Facebook, Inc.  All portions 
* of the code written by Facebook, Inc are 
* Copyright 2006-2008 Facebook, Inc. All Rights Reserved.
*
*
********END LICENSE BLOCK*********/


// Facebook Copyright 2006 - 2008

include_once 'demo_libs/config.php';
include_once 'demo_libs/facebook-platform/client/facebook.php';

$facebook = new Facebook();

print "Callback requested with GET: params: ";
print_r($_GET);
print "<HR>";
print "Callback requested with POST: params: ";
print_r($_POST);
print "<HR>";

echo "<h1>ECHO</h1>";

print_r($facebook->require_login());
 
echo "<h1>ECHO</h1>";


exit();

$sample_properties = array (
'default_fbml' => 'Hello at UTC' . time());


print "<hr>METHOD: admin_setAppProperties<br>";
try {
  $result = $facebook->api_client->admin_setAppProperties($sample_properties);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

$app_properties_array = array('application_name' , 'callback_url' , 'post_install_url' , 'edit_url' , 'dashboard_url' , 'uninstall_url' , 'ip_list' , 'email' , 'description' , 'use_iframe' , 'desktop' , 'is_mobile' , 'default_fbml' , 'default_action_fbml' , 'default_column' , 'message_url' , 'message_action' , 'about_url' , 'private_install' , 'installable' , 'privacy_url' , 'help_url' , 'see_all_url' , 'tos_url' , 'dev_mode' , 'preload_fql', 'contact_email');

print "<hr>METHOD: admin_getAppProperties<br>";
try {
  $result = $facebook->api_client->admin_getAppProperties($app_properties_array);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: application_getPublicInfo<br>";
try {
  $result = $facebook->api_client->application_getPublicInfo($THISAPP = 1234567);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: auth_createToken<br>";
try {
  $result = $facebook->api_client->auth_createToken();
  var_dump($result);
  $auth_token = $result; // SAVE for next call.
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: auth_getSession<br>";
try {
  $result = $facebook->api_client->auth_getSession($auth_token);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: friends_areFriends<br>";
try {
  $result = $facebook->api_client->friends_areFriends('1240078,1240079', '1240077,1240080');
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: friends_get<br>";
try {
  $result = $facebook->api_client->friends_get();
  var_dump(array_slice($result, 0, 5, true));
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}
print "<hr>METHOD: friends_get with list<br>";
try {
  $result = $facebook->api_client->friends_get($uid=1240077, $flid=98765);
  var_dump(array_slice($result, 0, 5, true));
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: friends_getAppUsers<br>";
try {
  $result = $facebook->api_client->friends_getAppUsers();
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: friends_getLists<br>";
try {
  $result = $facebook->api_client->friends_getLists();
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}


print "<hr>METHOD: profile_setFBML<br>";
$sample_fbml  = 'Hello!  Here\'s some fbml: <fb:profile-pic uid="1240077"/> at UTC ' . time();

try {

  $result = $facebook->api_client->profile_setFBML('deprecatedfbml', 1240077, $sample_fbml, '', ''); // FBOPEN:NOTE - last two params deprecated
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: profile_getFBML<br>";
try {
  $result = $facebook->api_client->profile_getFBML(1240077);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}


$user_fields_array = array( 'uid', 'about_me', 'activities', 'affiliations', 'birthday', 'books', 'current_location', 'education_history', 'first_name', 'hometown_location', 'has_added_app', 'hs_info', 'interests', 'is_app_user', 'last_name', 'meeting_for', 'meeting_sex', 'movies', 'music', 'name', 'notes_count', 'pic', 'pic_big', 'pic_small', 'pic_square', 'political', 'profile_update_time', 'quotes', 'relationship_status', 'religion', 'sex', 'significant_other_id', 'status', 'timezone', 'tv', 'wall_count', 'work_history');
$user_fields_str = implode(',', $user_fields_array);

print "<hr>METHOD: users_getInfo<br>";
try {
  $result = $facebook->api_client->users_getInfo('1240077,1240079', $user_fields_str);
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: users_getLoggedInUser<br>";
try {
  $result = $facebook->api_client->users_getLoggedInUser();
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}


print "<hr>METHOD: users_isAppAdded<br>";
try {
  $result = $facebook->api_client->users_isAppAdded();
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: batch_run<br>";
try {
$facebook->api_client->begin_batch();
$friends = &$facebook->api_client->friends_get(); 
$loggedinuser = &$facebook->api_client->users_getLoggedInUser(); 
$facebook->api_client->end_batch();
  var_dump(array_slice($friends, 0, 5, true));
  var_dump($loggedinuser);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: fql_query<br>";
try {
  $result = $facebook->api_client->fql_query('SELECT name, pic,current_location FROM user WHERE uid=1240077 OR uid=1240079');
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: feed_publishStoryToUser<br>";
try {
  $result = $facebook->api_client->feed_publishStoryToUser(
   'story title',
   '<i>The text!</i>',
   'http://images.yoursite/pic.jpg', 'http:///www.yoursite/dosomething.php',
   null, null, // no additional images
   null, null, // no additional images
   null, null // no additional images
  );
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}

print "<hr>METHOD: feed_publishActionOfUser<br>";
try {
  $result = $facebook->api_client->feed_publishActionOfUser(
   'story title',
   '<i>The text!</i>',
   'http://images.yoursite/pic.jpg', 'http:///www.yoursite/dosomething.php',
   null, null, // no additional images
   null, null, // no additional images
   null, null // no additional images
  );
  var_dump($result);
} catch (Exception $e) {
  print "GOT EXCEPTION " . var_dump($e);
}


