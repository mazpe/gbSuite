<?php
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';

include_once $GLOBALS['THRIFT_ROOT'].'/packages/api_10/api_10_types.php';

interface FacebookApi10If {
  public function auth_createToken();
  public function auth_getSession($auth_token);
  public function feed_publishStoryToUser($title, $body, $image_1, $image_1_link, $image_2, $image_2_link, $image_3, $image_3_link, $image_4, $image_4_link);
  public function feed_publishActionOfUser($title, $body, $image_1, $image_1_link, $image_2, $image_2_link, $image_3, $image_3_link, $image_4, $image_4_link);
  public function friends_areFriends($uids1, $uids2);
  public function friends_get($uid, $flid);
  public function friends_getAppUsers();
  public function friends_getLists();
  public function profile_setFBML($markup, $uid, $profile, $profile_action, $mobile_profile);
  public function profile_getFBML($uid);
  public function users_getInfo($uids, $fields);
  public function users_isAppAdded();
  public function users_getLoggedInUser();
  public function admin_getAppProperties($properties);
  public function admin_setAppProperties($properties);
  public function application_getPublicInfo($application_id, $application_api_key, $application_canvas_name);
  public function fql_query($query);
  public function batch_run($method_feed, $serial_only);
}

class FacebookApi10Rest {
  protected $impl_;

  public function __construct($impl) {
    $this->impl_ = $impl;
  }

  public function auth_createToken($request) {
    return $this->impl_->auth_createToken();
  }

  public function auth_getSession($request) {
    $auth_token = isset($request['auth_token']) ? (string)$request['auth_token'] : null;
    return $this->impl_->auth_getSession($auth_token);
  }

  public function feed_publishStoryToUser($request) {
    $title = isset($request['title']) ? (string)$request['title'] : null;
    $body = isset($request['body']) ? (string)$request['body'] : null;
    $image_1 = isset($request['image_1']) ? (string)$request['image_1'] : null;
    $image_1_link = isset($request['image_1_link']) ? (string)$request['image_1_link'] : null;
    $image_2 = isset($request['image_2']) ? (string)$request['image_2'] : null;
    $image_2_link = isset($request['image_2_link']) ? (string)$request['image_2_link'] : null;
    $image_3 = isset($request['image_3']) ? (string)$request['image_3'] : null;
    $image_3_link = isset($request['image_3_link']) ? (string)$request['image_3_link'] : null;
    $image_4 = isset($request['image_4']) ? (string)$request['image_4'] : null;
    $image_4_link = isset($request['image_4_link']) ? (string)$request['image_4_link'] : null;
    return $this->impl_->feed_publishStoryToUser($title, $body, $image_1, $image_1_link, $image_2, $image_2_link, $image_3, $image_3_link, $image_4, $image_4_link);
  }

  public function feed_publishActionOfUser($request) {
    $title = isset($request['title']) ? (string)$request['title'] : null;
    $body = isset($request['body']) ? (string)$request['body'] : null;
    $image_1 = isset($request['image_1']) ? (string)$request['image_1'] : null;
    $image_1_link = isset($request['image_1_link']) ? (string)$request['image_1_link'] : null;
    $image_2 = isset($request['image_2']) ? (string)$request['image_2'] : null;
    $image_2_link = isset($request['image_2_link']) ? (string)$request['image_2_link'] : null;
    $image_3 = isset($request['image_3']) ? (string)$request['image_3'] : null;
    $image_3_link = isset($request['image_3_link']) ? (string)$request['image_3_link'] : null;
    $image_4 = isset($request['image_4']) ? (string)$request['image_4'] : null;
    $image_4_link = isset($request['image_4_link']) ? (string)$request['image_4_link'] : null;
    return $this->impl_->feed_publishActionOfUser($title, $body, $image_1, $image_1_link, $image_2, $image_2_link, $image_3, $image_3_link, $image_4, $image_4_link);
  }

  public function friends_areFriends($request) {
    $uids1 = isset($request['uids1']) ? (string)$request['uids1'] : null;
    $uids2 = isset($request['uids2']) ? (string)$request['uids2'] : null;
    return $this->impl_->friends_areFriends($uids1, $uids2);
  }

  public function friends_get($request) {
    $uid = isset($request['uid']) ? (int)$request['uid'] : null;
    $flid = isset($request['flid']) ? (int)$request['flid'] : null;
    return $this->impl_->friends_get($uid, $flid);
  }

  public function friends_getAppUsers($request) {
    return $this->impl_->friends_getAppUsers();
  }

  public function friends_getLists($request) {
    return $this->impl_->friends_getLists();
  }

  public function profile_setFBML($request) {
    $markup = isset($request['markup']) ? (string)$request['markup'] : null;
    $uid = isset($request['uid']) ? (int)$request['uid'] : null;
    $profile = isset($request['profile']) ? (string)$request['profile'] : null;
    $profile_action = isset($request['profile_action']) ? (string)$request['profile_action'] : null;
    $mobile_profile = isset($request['mobile_profile']) ? (string)$request['mobile_profile'] : null;
    return $this->impl_->profile_setFBML($markup, $uid, $profile, $profile_action, $mobile_profile);
  }

  public function profile_getFBML($request) {
    $uid = isset($request['uid']) ? (int)$request['uid'] : null;
    return $this->impl_->profile_getFBML($uid);
  }

  public function users_getInfo($request) {
    $uids = isset($request['uids']) ? (string)$request['uids'] : null;
    $fields = isset($request['fields']) ? (string)$request['fields'] : null;
    return $this->impl_->users_getInfo($uids, $fields);
  }

  public function users_isAppAdded($request) {
    return $this->impl_->users_isAppAdded();
  }

  public function users_getLoggedInUser($request) {
    return $this->impl_->users_getLoggedInUser();
  }

  public function admin_getAppProperties($request) {
    $properties = isset($request['properties']) ? $request['properties'] : null;
    $properties = json_decode($properties, true);
    return $this->impl_->admin_getAppProperties($properties);
  }

  public function admin_setAppProperties($request) {
    $properties = isset($request['properties']) ? (string)$request['properties'] : null;
    return $this->impl_->admin_setAppProperties($properties);
  }

  public function application_getPublicInfo($request) {
    $application_id = isset($request['application_id']) ? (int)$request['application_id'] : null;
    $application_api_key = isset($request['application_api_key']) ? (string)$request['application_api_key'] : null;
    $application_canvas_name = isset($request['application_canvas_name']) ? (string)$request['application_canvas_name'] : null;
    return $this->impl_->application_getPublicInfo($application_id, $application_api_key, $application_canvas_name);
  }

  public function fql_query($request) {
    $query = isset($request['query']) ? (string)$request['query'] : null;
    return $this->impl_->fql_query($query);
  }

  public function batch_run($request) {
    $method_feed = isset($request['method_feed']) ? $request['method_feed'] : null;
    $method_feed = json_decode($method_feed, true);
    $serial_only = (bool)(!empty($request['serial_only']) && ($request['serial_only'] !== 'false'));
    return $this->impl_->batch_run($method_feed, $serial_only);
  }

}

$GLOBALS['THRIFT_AUTOLOAD']['facebookapi10client'] = 'api_10/api_10.FacebookApi10.client.php';
// HELPER FUNCTIONS AND STRUCTURES

?>
